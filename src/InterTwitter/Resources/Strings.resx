<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlankEmailError" xml:space="preserve">
    <value>Please, type your email</value>
  </data>
  <data name="BlankNameError" xml:space="preserve">
    <value>Please, type your name</value>
  </data>
  <data name="BookmarksTitle" xml:space="preserve">
    <value>Bookmarks</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="CreateYourAccount" xml:space="preserve">
    <value>Create your account</value>
  </data>
  <data name="DoNotMatch" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailInputError" xml:space="preserve">
    <value>Invalid email! It should contain @ and a domain.</value>
  </data>
  <data name="EmptyFieldsError" xml:space="preserve">
    <value>You have empty fields! Please, fill them.</value>
  </data>
  <data name="GetYourAccount" xml:space="preserve">
    <value>Get your account</value>
  </data>
  <data name="HomeTitle" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="InvalidPasswordMessage" xml:space="preserve">
    <value>Use at least 1 uppercase letter and 1 digit</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="LogInErrorTitle" xml:space="preserve">
    <value>Log In error!</value>
  </data>
  <data name="LogoutAlertBody" xml:space="preserve">
    <value>Are you sure that you want to logout?</value>
  </data>
  <data name="LogoutAlertCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="LogoutAlertOk" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="LogoutAlertTitle" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameInputError" xml:space="preserve">
    <value>Name should contain only latin characters!</value>
  </data>
  <data name="NameMustNotContainWhitespace" xml:space="preserve">
    <value>There mustn't be whitespaces inside your name!</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NoSuchUser" xml:space="preserve">
    <value>There's no any user with such email and password! Please, check your inputs once more or visit Sign Up page.</value>
  </data>
  <data name="NotificationTitle" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordInputInvalid" xml:space="preserve">
    <value>Weak password: use at least 6 symbols, 1 upper case and 1 digit.</value>
  </data>
  <data name="PasswordLengthError" xml:space="preserve">
    <value>Type at least 6 symbols</value>
  </data>
  <data name="SaveFailed" xml:space="preserve">
    <value>Permission for saving is denied</value>
  </data>
  <data name="SaveSucces" xml:space="preserve">
    <value>File was saved to gallery</value>
  </data>
  <data name="SaveTitle" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SearchTitle" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SigningIn" xml:space="preserve">
    <value>Signing in...</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignUpErrorMessage" xml:space="preserve">
    <value>Your inputs are not valid! Please, check them once more and try again!</value>
  </data>
  <data name="SignUpErrorTitle" xml:space="preserve">
    <value>Sign Up error!</value>
  </data>
  <data name="SuchUserAlreadyExists" xml:space="preserve">
    <value>User with this email already exists!</value>
  </data>
  <data name="YouLlNeedAPassword" xml:space="preserve">
    <value>You'll need a password</value>
  </data>
  <data name="Bookmarks" xml:space="preserve">
    <value>Bookmarks</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DeleteAllBookmarks" xml:space="preserve">
    <value>Delete all bookmarks</value>
  </data>
  <data name="DeleteAllBookmarksConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete all bookmarks?</value>
  </data>
  <data name="DeleteAllBookmarksConfirmTitle" xml:space="preserve">
    <value>Delete all bookmarks?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YouHaveNoBookmarksYet" xml:space="preserve">
    <value>You have no bookmarks yet</value>
  </data>
  <data name="YouHaveNoNotificationsYet" xml:space="preserve">
    <value>You have no notifications yet</value>
  </data>
  <data name="LikedYourPost" xml:space="preserve">
    <value>liked your post</value>
  </data>
  <data name="SavedYourPost" xml:space="preserve">
    <value>saved your post</value>
  </data>
  <data name="AskForStoragePermission" xml:space="preserve">
    <value>InterTwitter needs storage access so that you can save photos. Please enable it in Settings</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Saving" xml:space="preserve">
    <value>Saving...</value>
  </data>
  <data name="ChangePermissionSettings" xml:space="preserve">
    <value>Please change it in settings</value>
  </data>
  <data name="PermissionDenied" xml:space="preserve">
    <value>Permission was denied</value>
  </data>
  <data name="Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="Mute" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="Muted" xml:space="preserve">
    <value>Muted</value>
  </data>
  <data name="ProfileInBlacklist" xml:space="preserve">
    <value>Profile in blacklist</value>
  </data>
  <data name="RemoveFromBlacklist" xml:space="preserve">
    <value>Remove from blacklist</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save Changes?</value>
  </data>
  <data name="Unmute" xml:space="preserve">
    <value>Unmute</value>
  </data>
  <data name="PostEmpty" xml:space="preserve">
    <value>Please write any text to your post</value>
  </data>
  <data name="PostTitle" xml:space="preserve">
    <value>Post</value>
  </data>
</root>